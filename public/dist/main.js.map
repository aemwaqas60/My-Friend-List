{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.modules.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.component.css","webpack:///./src/app/auth/auth.component.html","webpack:///./src/app/auth/auth.component.ts","webpack:///./src/app/auth/signin/signin.component.css","webpack:///./src/app/auth/signin/signin.component.html","webpack:///./src/app/auth/signin/signin.component.ts","webpack:///./src/app/auth/signup/signup.component.css","webpack:///./src/app/auth/signup/signup.component.html","webpack:///./src/app/auth/signup/signup.component.ts","webpack:///./src/app/dashboard/home/friend-list/friend-list.component.css","webpack:///./src/app/dashboard/home/friend-list/friend-list.component.html","webpack:///./src/app/dashboard/home/friend-list/friend-list.component.ts","webpack:///./src/app/dashboard/home/home.component.css","webpack:///./src/app/dashboard/home/home.component.html","webpack:///./src/app/dashboard/home/home.component.ts","webpack:///./src/app/dashboard/home/user-details/user-details.component.css","webpack:///./src/app/dashboard/home/user-details/user-details.component.html","webpack:///./src/app/dashboard/home/user-details/user-details.component.ts","webpack:///./src/app/dashboard/home/users-list/users-list.component.css","webpack:///./src/app/dashboard/home/users-list/users-list.component.html","webpack:///./src/app/dashboard/home/users-list/users-list.component.ts","webpack:///./src/app/shared/components/navbar/navbar.component.css","webpack:///./src/app/shared/components/navbar/navbar.component.html","webpack:///./src/app/shared/components/navbar/navbar.component.ts","webpack:///./src/app/shared/services/auth.service.ts","webpack:///./src/app/shared/services/token-interceptor.service.ts","webpack:///./src/app/shared/services/user.service.ts","webpack:///./src/app/shared/validators/inputValidators.ts","webpack:///./src/app/welcome/welcome.component.css","webpack:///./src/app/welcome/welcome.component.html","webpack:///./src/app/welcome/welcome.component.ts","webpack:///./src/app/welcome/welcomeheader/welcomeheader.component.css","webpack:///./src/app/welcome/welcomeheader/welcomeheader.component.html","webpack:///./src/app/welcome/welcomeheader/welcomeheader.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SigninComponent } from './auth/signin/signin.component';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\nimport { HomeComponent } from './dashboard/home/home.component';\r\nimport { UsersListComponent } from './dashboard/home/users-list/users-list.component';\r\nimport { FriendListComponent } from './dashboard/home/friend-list/friend-list.component';\r\nimport { UserDetailsComponent } from './dashboard/home/user-details/user-details.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', redirectTo: '/welcome', pathMatch: 'full' },\r\n  { path: 'signup', component: SignupComponent },\r\n  {\r\n    path: 'signin', component: SigninComponent\r\n  },\r\n  { path: 'welcome', component: WelcomeComponent },\r\n  {\r\n    path: 'home', component: HomeComponent,\r\n    children: [\r\n      { path: 'users', component: UsersListComponent },\r\n      { path: 'friends', component: FriendListComponent },\r\n      { path: 'userDetails/:id', component: UserDetailsComponent }\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\nexport const routingComponents = [SignupComponent, UserDetailsComponent, SigninComponent, FriendListComponent, WelcomeComponent,\r\n  UsersListComponent, HomeComponent];\r\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ReactiveFormsModule, FormsModule, FormGroup } from '@angular/forms';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './shared/components/navbar/navbar.component';\r\nimport { HomeComponent } from './dashboard/home/home.component';\r\nimport { routingComponents, AppRoutingModule } from './app-routing.modules';\r\nimport { AuthComponent } from './auth/auth.component';\r\nimport { SigninComponent } from './auth/signin/signin.component';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\nimport { WelcomeheaderComponent } from './welcome/welcomeheader/welcomeheader.component';\r\nimport { AuthService } from './shared/services/auth.service';\r\nimport { UsersListComponent } from './dashboard/home/users-list/users-list.component';\r\nimport { UserService } from './shared/services/user.service';\r\nimport { FriendListComponent } from './dashboard/home/friend-list/friend-list.component';\r\nimport { TokenInterceptorService } from './shared/services/token-interceptor.service';\r\nimport { UserDetailsComponent } from './dashboard/home/user-details/user-details.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    routingComponents,\r\n    AuthComponent,\r\n    SigninComponent,\r\n    SignupComponent,\r\n    WelcomeComponent,\r\n    WelcomeheaderComponent,\r\n    UsersListComponent,\r\n    FriendListComponent,\r\n    UserDetailsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [AuthService, UserService, { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptorService, multi: true },\r\n    { provide: LocationStrategy, useClass: HashLocationStrategy }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.css']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-welcomeheader></app-welcomeheader>\\r\\n<div class=\\\"row \\\" style=\\\"margin-top:50px \\\">\\r\\n\\r\\n  <div class=\\\"col-md-6 mx-auto \\\">\\r\\n    <div class=\\\"card card-body \\\">\\r\\n\\r\\n      <h1 class=\\\"text-center\\\">User Login</h1>\\r\\n      <div [ngClass]=\\\"alert.class\\\" >{{alert.message}}</div>\\r\\n\\r\\n\\r\\n      <form [formGroup]=\\\"signinForm \\\" (ngSubmit)=\\\"onSigninSubmit()\\\">\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"user-name\\\">Username</label>\\r\\n          <input type=\\\"text \\\" class=\\\"form-control\\\" id=\\\"user-name\\\" [(ngModel)]=\\\"user.username\\\" formControlName=\\\"username\\\" name=\\\"username_\\\"\\r\\n            placeholder=\\\"abc1124 etc.\\\">\\r\\n\\r\\n          <div *ngIf=\\\"signinForm.get('username').touched && signinForm.get('username').invalid\\\" style=\\\"color: red; \\\">\\r\\n\\r\\n            <div *ngIf=\\\"signinForm.get('username').errors?.required\\\">username is required</div>\\r\\n            <div *ngIf=\\\"signinForm.get('username').errors?.isInputEmpty\\\">username cannot be empty </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"password\\\">Password</label>\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" formControlName=\\\"password\\\" name=\\\"password_\\\"\\r\\n            placeholder=\\\"Password\\\">\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"signinForm.get('password').touched && signinForm.get('password').invalid\\\" style=\\\"color: red \\\">\\r\\n\\r\\n            <div *ngIf=\\\"signinForm.get('password').errors?.required\\\">passsword is required</div>\\r\\n            <div *ngIf=\\\"signinForm.get('password').errors?.isInputEmpty\\\">password cannot be empty </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <button [disabled]=\\\"signinForm.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-right: 10px\\\">Signin</button>\\r\\n\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '../../../../node_modules/@angular/forms';\r\nimport { FormGroup, Validators } from '@angular/forms';\r\nimport { InputValidators } from '../../shared/validators/inputValidators';\r\nimport { Router } from '../../../../node_modules/@angular/router';\r\nimport { AuthService } from '../../shared/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.css']\r\n})\r\nexport class SigninComponent implements OnInit {\r\n\r\n\r\n  signinForm: FormGroup;\r\n  localUserData;\r\n  token;\r\n\r\n  alert = {\r\n    message: '',\r\n    class: ''\r\n  };\r\n\r\n  user = {\r\n    username: '',\r\n    password: ''\r\n  };\r\n  constructor(private _router: Router, private _authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    /*\r\n        this.localUserData = localStorage.getItem('user');\r\n        this.token = localStorage.getItem('token');\r\n\r\n        console.log('token: ', this.token);\r\n        console.log('user local data: ', this.localUserData); */\r\n\r\n    this.initSigninForm();\r\n  }\r\n\r\n  initSigninForm() {\r\n    this.signinForm = new FormGroup({\r\n      'username': new FormControl(null, [Validators.required, InputValidators.isInputEmpty]),\r\n      'password': new FormControl(null, [Validators.required, InputValidators.isInputEmpty]),\r\n    });\r\n  }\r\n\r\n  onSigninSubmit() {\r\n    // Es6 santax for console data\r\n\r\n    console.log('user signin data:', this.user);\r\n\r\n\r\n    this._authService.signin(this.user)\r\n      .subscribe((res) => {\r\n\r\n        console.log('sigin response: ', res);\r\n\r\n\r\n        this.alert.message = res.message;\r\n        this.alert.class = 'alert alert-success';\r\n\r\n\r\n\r\n        // store jwt token in local storage\r\n        localStorage.setItem('token', res.token);\r\n\r\n        setTimeout(() => {\r\n          this._router.navigate(['/home/users']);\r\n        }, 3000);\r\n\r\n      }, (err) => {\r\n\r\n        console.log('signin error: ', err);\r\n        console.log('signin error message: ', err.error.message);\r\n\r\n        this.alert.class = 'alert alert-danger';\r\n        this.alert.message = err.error.message;\r\n\r\n      });\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-welcomeheader>\\r\\n</app-welcomeheader>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n  <div class=\\\"col-md-6 mx-auto\\\">\\r\\n    <div class=\\\"card card-body\\\" style=\\\"margin-top: 20px\\\">\\r\\n\\r\\n      <h1 class=\\\"text-center\\\">User Signup </h1>\\r\\n      <form [formGroup]=\\\"signupForm\\\" (ngSubmit)=\\\"onSignupFormSubmit()\\\">\\r\\n\\r\\n        <!--  <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"first-name\\\">First Name</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"first-name\\\" name=\\\"first_Name\\\" formControlName=\\\"firstName\\\" [(ngModel)]=\\\"user.firstName\\\"\\r\\n            placeholder=\\\"first name\\\">\\r\\n\\r\\n          <div *ngIf=\\\"signupForm.controls.firstName?.touched && signupForm.controls.firstName?.invalid\\\" style=\\\"color: red\\\">\\r\\n            <div *ngIf=\\\"signupForm.controls.firstName.errors?.required\\\">First name is required</div>\\r\\n            <div *ngIf=\\\"signupForm.controls.firstName.errors?.isInputEmpty\\\">First name cannot be empty </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"last-name\\\">Last Name</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"last-name\\\" name=\\\"last_Name\\\" formControlName=\\\"lastName\\\" [(ngModel)]=\\\"user.lastName\\\"\\r\\n            placeholder=\\\"last name\\\">\\r\\n\\r\\n          <div *ngIf=\\\"signupForm.controls.lastName?.touched && signupForm.controls.lastName?.invalid\\\" style=\\\"color: red \\\">\\r\\n            <div *ngIf=\\\"signupForm.controls.lastName.errors?.required\\\">Last name is required</div>\\r\\n            <div *ngIf=\\\"signupForm.controls.lastName.errors?.isInputEmpty\\\">Last name cannot be empty </div>\\r\\n          </div>\\r\\n        </div> -->\\r\\n\\r\\n        <div class=\\\"form-group \\\">\\r\\n          <label for=\\\"user-name \\\">Username</label>\\r\\n          <input type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"user-name\\\" (keyup)=\\\"onCheckUserName($event)\\\" name=\\\"user_Name\\\" formControlName=\\\"username\\\"\\r\\n            [(ngModel)]=\\\"user.username\\\" placeholder=\\\" Mark Zakarbarg etc \\\">\\r\\n\\r\\n          <div *ngIf=\\\"checkUserName?.status=='200' \\\" style=\\\"color: green \\\"> {{checkUserName?.message}}</div>\\r\\n          <div *ngIf=\\\"checkUserName?.status=='404' \\\" style=\\\"color: red \\\"> {{checkUserName?.message}}</div>\\r\\n\\r\\n          <div *ngIf=\\\"signupForm.controls.username?.touched && signupForm.controls.username?.invalid\\\" style=\\\"color: red \\\">\\r\\n            <div *ngIf=\\\"signupForm.controls.username.errors?.required\\\">User name is required</div>\\r\\n            <div *ngIf=\\\"signupForm.controls.username.errors?.isInputEmpty\\\">user name cannot be empty </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group \\\">\\r\\n          <label for=\\\"exampleInputEmail1 \\\">Email address</label>\\r\\n          <input type=\\\"email \\\" class=\\\"form-control \\\" id=\\\"exampleInputEmail1\\\" (keyup)=\\\"onCheckEmail($event)\\\" aria-describedby=\\\"emailHelp \\\"\\r\\n            name=\\\"email_\\\" formControlName=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" placeholder=\\\"abc@gmai.com etc.\\\">\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"checkEmail?.status=='200' \\\" style=\\\"color: green \\\"> {{checkEmail.message}}</div>\\r\\n          <div *ngIf=\\\"checkEmail?.status=='404' \\\" style=\\\"color: red \\\"> {{checkEmail?.message}}</div>\\r\\n\\r\\n          <div *ngIf=\\\"signupForm.controls.email?.touched && signupForm.controls.email?.invalid \\\" style=\\\"color: red \\\">\\r\\n            <div *ngIf=\\\"signupForm.controls.email.errors?.email\\\">Enter valid email pattern e.g abc@gmail.com</div>\\r\\n            <div *ngIf=\\\"!signupForm.controls.email.errors?.requied\\\">email field is required.</div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div [formGroup]=\\\"passwordFormGroup\\\">\\r\\n\\r\\n          <div class=\\\"form-group \\\">\\r\\n            <label for=\\\"exampleInputPassword1\\\">Password</label>\\r\\n            <input type=\\\"password\\\" class=\\\"form-control \\\" id=\\\"exampleInputPassword1\\\" formControlName=\\\"password\\\" [(ngModel)]=\\\"user.password\\\"\\r\\n              name=\\\"password_\\\" placeholder=\\\"LOckIt_!23\\\">\\r\\n\\r\\n            <div *ngIf=\\\"passwordFormGroup?.touched && passwordFormGroup?.invalid\\\" style=\\\"color: red \\\">\\r\\n              <div *ngIf=\\\"passwordFormGroup.controls.password.errors?.required\\\">password is requied</div>\\r\\n              <div *ngIf=\\\"passwordFormGroup.controls.password.errors?.isInputEmpty\\\">password cannot be empty </div>\\r\\n\\r\\n              <div *ngIf=\\\"passwordFormGroup.errors?.doesNotMatchPassword\\\">password does not match</div>\\r\\n              <div *ngIf=\\\"passwordFormGroup.errors?.doesNotMatchPassword == false\\\" style=\\\"color: green\\\">passwords successfully matched </div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group \\\">\\r\\n            <label for=\\\"repeat-Password\\\">Repeat Password</label>\\r\\n            <input type=\\\"password\\\" class=\\\"form-control \\\" id=\\\"repeat-Password\\\" formControlName=\\\"repeatPassword\\\" [(ngModel)]=\\\"user.repeatPassword\\\"\\r\\n              name=\\\"repeat_Password\\\" placeholder=\\\"repeat above password here\\\">\\r\\n\\r\\n            <div *ngIf=\\\"passwordFormGroup?.touched && passwordFormGroup?.invalid\\\" style=\\\"color: red \\\">\\r\\n              <div *ngIf=\\\"passwordFormGroup.controls.repeatPassword.errors?.required\\\">password is requied</div>\\r\\n              <div *ngIf=\\\"passwordFormGroup.controls.repeatPassword.errors?.isInputEmpty\\\">password cannot be empty</div>\\r\\n\\r\\n              <div *ngIf=\\\"passwordFormGroup.errors?.doesNotMatchPassword\\\">passwords does not match</div>\\r\\n              <div *ngIf=\\\"passwordFormGroup.errors?.doesNotMatchPassword ===  false\\\" style=\\\"color: green\\\">passwords successfully matched </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <button [disabled]=\\\" signupForm.invalid || (passwordFormGroup.errors?.doesNotMatchPassword === true) || checkUserName.status == '404'\\\"\\r\\n          type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"align-items: center\\\">Signup</button>\\r\\n\\r\\n        <div [ngClass]=\\\"alert.class\\\" style=\\\"margin: 10px\\\">{{alert.message}}</div>\\r\\n\\r\\n      </form>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { Router } from '../../../../node_modules/@angular/router';\r\nimport { InputValidators } from '../../shared/validators/inputValidators';\r\nimport { AuthService } from '../../shared/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  signupForm: FormGroup;\r\n  passwordFormGroup: FormGroup;\r\n\r\n  user = {\r\n    email: '',\r\n    username: '',\r\n    password: ''\r\n  };\r\n\r\n  checkUserName = {\r\n    status: '',\r\n    message: ''\r\n  };\r\n  checkEmail = {\r\n    status: '',\r\n    message: ''\r\n  };\r\n\r\n  alert = {\r\n    class: '',\r\n    message: ''\r\n  };\r\n\r\n\r\n  constructor(private _authService: AuthService, private formBuilder: FormBuilder, private _router: Router) { }\r\n  ngOnInit() {\r\n\r\n    this.initializeSignupForm();\r\n  }\r\n\r\n\r\n  initializeSignupForm() {\r\n    // Reactive forms validation\r\n    this.signupForm = this.formBuilder.group({\r\n      username: ['', [Validators.required, InputValidators.isInputEmpty]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      passwordFormGroup: this.passwordFormGroup\r\n    },\r\n    );\r\n    this.passwordFormGroup = this.formBuilder.group({\r\n      password: ['', [Validators.required, InputValidators.isInputEmpty]],\r\n      repeatPassword: ['', [Validators.required, InputValidators.isInputEmpty]]\r\n    }, {\r\n        validator: InputValidators.validatePassword.bind(this)\r\n      });\r\n  }\r\n  onSignupFormSubmit() {\r\n    // console.log(this.user);\r\n\r\n    console.log(this.signupForm);\r\n\r\n    this._authService.signup(this.user)\r\n      .subscribe((res) => {\r\n\r\n        this.alert.class = 'alert alert-success';\r\n        this.alert.message = res['message'];\r\n\r\n        console.log('Reponse: ', res);\r\n\r\n        setTimeout(() => {\r\n          this._router.navigate(['/signin']);\r\n        }, 3000);\r\n\r\n      }, (err) => {\r\n        console.log('Sigup Error: ', err);\r\n\r\n        this.alert.class = 'alert alert-danger';\r\n        this.alert.message = err.error['message'];\r\n\r\n      });\r\n  }\r\n  // checking either username is available or not\r\n  onCheckUserName(event) {\r\n\r\n    const data = {\r\n      username: event.target.value\r\n    };\r\n\r\n\r\n    this._authService.checkUserName(data)\r\n      .subscribe((res) => {\r\n\r\n        console.log('Reponse: ', res);\r\n\r\n        this.checkUserName = res;\r\n\r\n      }, (err) => {\r\n\r\n        console.log('user name check err: ', err);\r\n\r\n      });\r\n  }\r\n  onCheckEmail(event) {\r\n\r\n    console.log(event.target.value);\r\n\r\n    const data = {\r\n      email: event.target.value\r\n    };\r\n\r\n    this._authService.checkEmail(data)\r\n      .subscribe((res) => {\r\n\r\n        console.log('Reponse: ', res);\r\n\r\n        this.checkEmail = res;\r\n\r\n      }, (err) => {\r\n\r\n        console.log('user email check err: ', err);\r\n\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n  <div class=\\\"card\\\" style=\\\"margin-top: 10px; width:400px\\\" *ngFor=\\\"let friend of friends\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <h4 class=\\\"card-title\\\">{{friend.username}}</h4>\\r\\n      <p class=\\\"card-title\\\">{{friend.created_date | date: 'longDate' }}</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../../shared/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-friend-list',\r\n  templateUrl: './friend-list.component.html',\r\n  styleUrls: ['./friend-list.component.css']\r\n})\r\nexport class FriendListComponent implements OnInit {\r\n\r\n  constructor(private _userService: UserService) { }\r\n  friends;\r\n  ngOnInit() {\r\n    this.loadFriendList();\r\n  }\r\n\r\n  loadFriendList() {\r\n    this._userService.getfriendList()\r\n      .subscribe((res) => {\r\n        this.friends = res.friends['friends'];\r\n\r\n        console.log(this.friends);\r\n\r\n\r\n      }, (err) => {\r\n        console.log('error', err);\r\n\r\n\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n  <div class=\\\"card \\\" style=\\\"margin-top: 10px; width:400px\\\">\\r\\n    <div class=\\\"card-body md-6\\\">\\r\\n      <h2 class=\\\"card-title\\\">User Details</h2>\\r\\n      <h4 class=\\\"card-title\\\">username: {{user?.username}}</h4>\\r\\n      <h4 class=\\\"card-title\\\">email: {{user?.email}}</h4>\\r\\n      <p class=\\\"card-title\\\">Created_Date:{{user?.created_date | date: 'longDate' }}</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\ns\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../../shared/services/user.service';\r\nimport { ActivatedRoute } from '../../../../../node_modules/@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user-details',\r\n  templateUrl: './user-details.component.html',\r\n  styleUrls: ['./user-details.component.css']\r\n})\r\nexport class UserDetailsComponent implements OnInit {\r\n  userId;\r\n  user;\r\n  constructor(private _userService: UserService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.userId = this.route.snapshot.paramMap.get('id');\r\n    this.getUserDetails();\r\n\r\n  }\r\n\r\n  getUserDetails() {\r\n\r\n    this._userService.getUser(this.userId)\r\n      .subscribe((res) => {\r\n        this.user = res.user;\r\n\r\n        console.log(this.user);\r\n\r\n      }, (err) => {\r\n\r\n        console.log(err);\r\n\r\n      });\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div *ngFor=\\\"let user of users\\\">\\r\\n    <div routerLink=\\\"/home/userDetails/{{user._id}}\\\" class=\\\"card\\\" style=\\\"margin-top: 10px; width:400px\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h4 class=\\\"card-title\\\">{{user?.username}}</h4>\\r\\n        <p class=\\\"card-title\\\">{{user?.created_date | date: 'longDate' }}</p>\\r\\n        <a (click)=\\\"onAddNewFriend(user._id)\\\" class=\\\" btn btn-primary \\\">+ Friend</a>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../../shared/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-users-list',\r\n  templateUrl: './users-list.component.html',\r\n  styleUrls: ['./users-list.component.css']\r\n})\r\nexport class UsersListComponent implements OnInit {\r\n\r\n  constructor(private _userService: UserService) { }\r\n  users;\r\n  ngOnInit() {\r\n\r\n    this.getUserList();\r\n  }\r\n\r\n\r\n  onAddNewFriend(friend_id) {\r\n    const data = {\r\n      friend_id: friend_id\r\n    };\r\n    this._userService.addNewFriend(data)\r\n      .subscribe((res) => {\r\n        console.log('add new friend response:', res);\r\n\r\n      }, (err) => {\r\n\r\n        console.log('add new friend err: ', err);\r\n      });\r\n  }\r\n  getUserList() {\r\n\r\n    this._userService.getUsers()\r\n      .subscribe((res) => {\r\n\r\n        this.users = res.users;\r\n        console.log(res.users);\r\n\r\n\r\n      }, (err) => {\r\n\r\n        console.log('user get error: ', err);\r\n\r\n      });\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \".auth-buttons {\\r\\n  margin-right: 10px;\\r\\n}\\r\\n\\r\\n.signin-button {\\r\\n  margin-right: 10px;\\r\\n}\\r\\n\\r\\n.signup-button {\\r\\n  margin-right: 10px;\\r\\n}\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n  <a class=\\\"navbar-brand\\\">Friends List</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\r\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item active\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/home/users\\\">Home\\r\\n          <span class=\\\"sr-only\\\">(current)</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/home/friends\\\">Friends</a>\\r\\n      </li>\\r\\n\\r\\n    </ul>\\r\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\r\\n      <div class=\\\"auth-buttons\\\">\\r\\n      </div>\\r\\n\\r\\n      <button class=\\\"btn btn-outline-primary my-2 my-sm-0\\\" type=\\\"submit\\\">Logout</button>\\r\\n    </form>\\r\\n  </div>\\r\\n</nav>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  BASE_URL = environment.BASE_URL;\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  signin(user) {\r\n    return this._http.post<any>(this.BASE_URL + '/auth/signin', user);\r\n  }\r\n\r\n  signup(user) {\r\n\r\n    return this._http.post<any>(this.BASE_URL + '/auth/signup', user);\r\n  }\r\n  checkUserName(user_name) {\r\n    return this._http.post<any>(this.BASE_URL + '/auth/checkUsername', user_name);\r\n  }\r\n  checkEmail(user_name) {\r\n    return this._http.post<any>(this.BASE_URL + '/auth/checkEmail', user_name);\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('token');\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\nimport { HttpInterceptor } from '../../../../node_modules/@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private _intjector: Injector) { }\r\n\r\n  intercept(req, next) {\r\n    const authService = this._intjector.get(AuthService);\r\n\r\n    const tokenizedReuest = req.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${authService.getToken()}`\r\n      }\r\n    });\r\n    return next.handle(tokenizedReuest);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  BASE_URL = environment.BASE_URL;\r\n  constructor(private _http: HttpClient) {\r\n  }\r\n\r\n  getUsers() {\r\n    return this._http.get<any>(this.BASE_URL + '/users');\r\n  }\r\n  getUser(user_id) {\r\n\r\n    console.log('user id inside service :', user_id);\r\n\r\n    return this._http.get<any>(this.BASE_URL + '/users/' + user_id);\r\n  }\r\n  getfriendList() {\r\n    return this._http.get<any>(this.BASE_URL + '/friends');\r\n  }\r\n  addNewFriend(data) {\r\n    return this._http.post<any>(this.BASE_URL + '/users/addNewFriend', data);\r\n  }\r\n\r\n\r\n}\r\n","import { AbstractControl, ValidationErrors, FormGroup } from '@angular/forms';\r\nexport class InputValidators {\r\n\r\n  password: InputValidators;\r\n  repeatPassword: String;\r\n\r\n  static isInputEmpty(control: FormGroup) {\r\n    console.log('control in validator input cannot be empty: ', control);\r\n    // console.log('first name value : ', control.controls.firstName.value);\r\n\r\n    if (control.value && (control.value as string).trim().length === 0) {\r\n      return { isInputEmpty: true };\r\n    } else {\r\n      return null;\r\n    }\r\n\r\n  }\r\n  static validatePassword(passwordFormcontrol: FormGroup) {\r\n\r\n    console.log('control in validator: ', passwordFormcontrol);\r\n    // console.log('control in validator: ', passwordFormcontrol);\r\n\r\n\r\n    const password = String(passwordFormcontrol.controls.password.value);\r\n    const repeatPassword = String(passwordFormcontrol.controls.repeatPassword.value);\r\n\r\n    console.log('Password: ', password);\r\n    console.log('Repeat  Password: ', repeatPassword);\r\n\r\n    /*  if (repeatPassword.length <= 0) {\r\n       return null;\r\n     }\r\n  */\r\n    if (repeatPassword !== password) {\r\n\r\n      console.log('Inside if:');\r\n\r\n      return {\r\n        doesNotMatchPassword: true\r\n      };\r\n    } else {\r\n\r\n      return { doesNotMatchPassword: false };\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-welcomeheader></app-welcomeheader>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-welcome',\r\n  templateUrl: './welcome.component.html',\r\n  styleUrls: ['./welcome.component.css']\r\n})\r\nexport class WelcomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n  <a class=\\\"navbar-brand\\\">Friends List</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\r\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n\\r\\n    </ul>\\r\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\r\\n      <div class=\\\"auth-buttons\\\">\\r\\n        <button class=\\\"btn btn-outline-success my-2 my-sm-0 signin-button\\\" type=\\\"submit\\\" style=\\\"margin-right: 10px\\\" routerLink=\\\"/signin\\\">Signin</button>\\r\\n        <button class=\\\"btn btn-outline-success my-2 my-sm-0 signup-button \\\" type=\\\"submit \\\" routerLink=\\\"/signup\\\">Register</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</nav>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-welcomeheader',\r\n  templateUrl: './welcomeheader.component.html',\r\n  styleUrls: ['./welcomeheader.component.css']\r\n})\r\nexport class WelcomeheaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  BASE_URL: 'http://localhost:3000'\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}